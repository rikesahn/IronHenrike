1. How to import pandas and check the version?
Show Solution

2. How to create a series from a list, numpy array and dict?
Create a pandas series from each of the items below: a list, numpy and a dictionary

Input

import numpy as np
mylist = list('abcedfghijklmnopqrstuvwxyz')
myarr = np.arange(26)
mydict = dict(zip(mylist, myarr))
Show Solution
3. How to convert the index of a series into a column of a dataframe?
Difficulty Level: L1

Convert the series ser into a dataframe with its index as another column on the dataframe.

Input
mylist = list('abcedfghijklmnopqrstuvwxyz')
myarr = np.arange(26)
mydict = dict(zip(mylist, myarr))
ser = pd.Series(mydict)
Show Solution
Get FREE 30 DAY ACCESS  to Structured learning path for ML in Python (Beginner to Pro) –  Start as an absolute beginner and graduate over 15 courses to solve Industrial Projects like a real Data Scientist. Includes query support over chat.

4. How to combine many series to form a dataframe?
Difficulty Level: L1

Combine ser1 and ser2 to form a dataframe.

Input
import numpy as np
ser1 = pd.Series(list('abcedfghijklmnopqrstuvwxyz'))
ser2 = pd.Series(np.arange(26))
Show Solution
5. How to assign name to the series’ index?
Difficulty Level: L1

Give a name to the series ser calling it ‘alphabets’.

Input

ser = pd.Series(list('abcedfghijklmnopqrstuvwxyz'))
Show Solution
6. How to get the items of series A not present in series B?
Difficulty Level: L2

From ser1 remove items present in ser2.
ser1 = pd.Series([1, 2, 3, 4, 5])
ser2 = pd.Series([4, 5, 6, 7, 8])
Show Solution
7. How to get the items not common to both series A and series B?
Difficulty Level: L2

Get all items of ser1 and ser2 not common to both.

Input

ser1 = pd.Series([1, 2, 3, 4, 5])
ser2 = pd.Series([4, 5, 6, 7, 8])
Show Solution
8. How to get the minimum, 25th percentile, median, 75th, and max of a numeric series?
Difficuty Level: L2

Compute the minimum, 25th percentile, median, 75th, and maximum of ser.

Input

ser = pd.Series(np.random.normal(10, 5, 25))
Show Solution
9. How to get frequency counts of unique items of a series?
Difficulty Level: L1

Calculte the frequency counts of each unique value ser.

Input

ser = pd.Series(np.take(list('abcdefgh'), np.random.randint(8, size=30)))
Show Solution
10. How to keep only top 2 most frequent values as it is and replace everything else as ‘Other’?
Difficulty Level: L2
From ser, keep the top 2 most frequent items as it is and replace everything else as ‘Other’.

Input

np.random.RandomState(100)
ser = pd.Series(np.random.randint(1, 5, [12]))
Show Solution
11. How to bin a numeric series to 10 groups of equal size?
Difficulty Level: L2

Bin the series ser into 10 equal deciles and replace the values with the bin name.

Input

ser = pd.Series(np.random.random(20))
Desired Output

# First 5 items
0    7th
1    9th
2    7th
3    3rd
4    8th
dtype: category
Categories (10, object): [1st < 2nd < 3rd < 4th ... 7th < 8th < 9th < 10th]
Show Solution
12. How to convert a numpy array to a dataframe of given shape? (L1)
Difficulty Level: L1

Reshape the series ser into a dataframe with 7 rows and 5 columns

Input

ser = pd.Series(np.random.randint(1, 10, 35))
Show Solution
13. How to find the positions of numbers that are multiples of 3 from a series?
Difficulty Level: L2
Find the positions of numbers that are multiples of 3 from ser.

Input

ser = pd.Series(np.random.randint(1, 10, 7))
Show Solution
14. How to extract items at given positions from a series
Difficulty Level: L1

From ser, extract the items at positions in list pos.

Input

ser = pd.Series(list('abcdefghijklmnopqrstuvwxyz'))
pos = [0, 4, 8, 14, 20]
Show Solution
15. How to stack two series vertically and horizontally ?
Difficulty Level: L1

Stack ser1 and ser2 vertically and horizontally (to form a dataframe).

Input

ser1 = pd.Series(range(5))
ser2 = pd.Series(list('abcde'))
Show Solution
16. How to get the positions of items of series A in another series B?
Difficulty Level: L2

Get the positions of items of ser2 in ser1 as a list.
Input

ser1 = pd.Series([10, 9, 6, 5, 3, 1, 12, 8, 13])
ser2 = pd.Series([1, 3, 10, 13])
Show Solution
17. How to compute the mean squared error on a truth and predicted series?
Difficulty Level: L2

Compute the mean squared error of truth and pred series.

Input

truth = pd.Series(range(10))
pred = pd.Series(range(10)) + np.random.random(10)
Show Solution
18. How to convert the first character of each element in a series to uppercase?
Difficulty Level: L2

Change the first character of each word to upper case in each word of ser.

ser = pd.Series(['how', 'to', 'kick', 'ass?'])
Show Solution
19. How to calculate the number of characters in each word in a series?
Difficulty Level: L2

Input

ser = pd.Series(['how', 'to', 'kick', 'ass?'])
Show Solution
20. How to compute difference of differences between consequtive numbers of a series?
Difficulty Level: L1

Difference of differences between the consequtive numbers of ser.
Input

ser = pd.Series([1, 3, 6, 10, 15, 21, 27, 35])
Desired Output

[nan, 2.0, 3.0, 4.0, 5.0, 6.0, 6.0, 8.0]
[nan, nan, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0]
Show Solution
21. How to convert a series of date-strings to a timeseries?
Difficiulty Level: L2

Input

ser = pd.Series(['01 Jan 2010', '02-02-2011', '20120303', '2013/04/04', '2014-05-05', '2015-06-06T12:20'])
Desired Output

0   2010-01-01 00:00:00
1   2011-02-02 00:00:00
2   2012-03-03 00:00:00
3   2013-04-04 00:00:00
4   2014-05-05 00:00:00
5   2015-06-06 12:20:00
dtype: datetime64[ns]
Show Solution
22. How to get the day of month, week number, day of year and day of week from a series of date strings?
Difficiulty Level: L2

Get the day of month, week number, day of year and day of week from ser.

Input

ser = pd.Series(['01 Jan 2010', '02-02-2011', '20120303', '2013/04/04', '2014-05-05', '2015-06-06T12:20'])
Desired output

Date:  [1, 2, 3, 4, 5, 6]
Week number:  [53, 5, 9, 14, 19, 23]
Day num of year:  [1, 33, 63, 94, 125, 157]
Day of week:  ['Friday', 'Wednesday', 'Saturday', 'Thursday', 'Monday', 'Saturday']
Show Solution
23. How to convert year-month string to dates corresponding to the 4th day of the month?
Difficiulty Level: L2
Change ser to dates that start with 4th of the respective months.

Input

ser = pd.Series(['Jan 2010', 'Feb 2011', 'Mar 2012'])
Desired Output

0   2010-01-04
1   2011-02-04
2   2012-03-04
dtype: datetime64[ns]
Show Solution
24. How to filter words that contain atleast 2 vowels from a series?
Difficiulty Level: L3

From ser, extract words that contain atleast 2 vowels.

Input

ser = pd.Series(['Apple', 'Orange', 'Plan', 'Python', 'Money'])
Desired Output

0     Apple
1    Orange
4     Money
dtype: object
Show Solution